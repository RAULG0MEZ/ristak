generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  contact_id      String    @id
  firstName       String?   @map("first_name")
  lastName        String?   @map("last_name")
  email           String?
  phone           String?
  company         String?
  attributionAdId String?   @map("attribution_ad_id")
  ext_crm_id      String?   @unique(map: "contacts_ghl_id_key")
  status          String?
  source          String?
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  name            String?   @default(dbgenerated("((COALESCE(first_name, ''::text) ||\nCASE\n    WHEN ((first_name IS NOT NULL) AND (last_name IS NOT NULL)) THEN ' '::text\n    ELSE ''::text\nEND) || COALESCE(last_name, ''::text))"))
  visitor_id      String?   @db.VarChar(50)
  payments        Payment[]

  @@index([attributionAdId])
  @@map("contacts")
}

model Appointment {
  appointment_id   String    @id @default(dbgenerated("(gen_random_uuid())::text"))
  contactId        String?   @map("contact_id")
  title            String?
  description      String?
  location         String?
  appointment_date DateTime? @db.Timestamp(6)
  start_time       DateTime? @db.Timestamp(6)
  end_time         DateTime? @db.Timestamp(6)
  status           String?   @default("scheduled")
  reminder_sent    Boolean?  @default(false)
  notes            String?
  createdAt        DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  scheduled_at     DateTime? @db.Timestamp(6)
  duration         Int?
  webhook_data     Json?

  @@index([contactId], map: "idx_appointments_contact")
  @@index([contactId], map: "idx_appointments_contact_id")
  @@index([appointment_date], map: "idx_appointments_date")
  @@index([status], map: "idx_appointments_status")
  @@map("appointments")
}

model Payment {
  id            String    @id @default(uuid())
  contactId     String    @map("contact_id")
  amount        Decimal   @db.Decimal(14, 2)
  currency      String    @default("MXN")
  transactionId String    @unique @map("transaction_id")
  paymentMethod String?   @map("payment_method")
  status        String    @default("pending")
  description   String?
  invoiceNumber String?   @map("invoice_number")
  paidAt        DateTime? @map("paid_at") @db.Timestamptz(6)
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  ext_crm_id    String?
  contact       Contact   @relation(fields: [contactId], references: [contact_id])

  @@index([contactId])
  @@index([paidAt])
  @@index([contactId, ext_crm_id], map: "idx_payments_contact_ext_crm")
  @@index([ext_crm_id], map: "idx_payments_ext_crm_id")
  @@map("payments")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tracking_domains {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hostname         String    @unique
  status           String    @default("pending")
  cf_hostname_id   String?
  dcv_method       String?
  dcv_record_value String?
  dns_instructions Json?     @default("[]")
  ssl_status       String?
  last_checked_at  DateTime? @db.Timestamptz(6)
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)
  is_active        Boolean?  @default(dbgenerated("(status = 'active'::text)"))
  dcv_record_name  String?
  dcv_verified_at  DateTime? @db.Timestamptz(6)

  @@index([is_active], map: "idx_tracking_domains_is_active")
  @@index([status], map: "idx_tracking_domains_status")
}

model users {
  id                Int       @id @default(autoincrement())
  email             String    @unique @db.VarChar(255)
  password_hash     String    @db.VarChar(255)
  name              String?   @db.VarChar(255)
  role              String?   @default("admin") @db.VarChar(50)
  created_at        DateTime? @default(now()) @db.Timestamp(6)
  updated_at        DateTime? @default(now()) @db.Timestamp(6)
  last_login_at     DateTime? @db.Timestamp(6)
  timezone          String    @default("America/Mexico_City")
  currency          String    @default("MXN")
  settings          Json      @default("{}")
  table_preferences Json      @default("{}") // Configuraci√≥n personalizada de tablas del usuario

  @@index([email], map: "idx_users_email")
}

enum credential_status {
  NOT_CONNECTED
  CONNECTING
  CONNECTED
  EXPIRED
  ERROR
  REVOKED
}
